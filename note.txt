1  Server Creation - using express
-------------------

install express
           
             - npm i express
             

   1. import express

   2. create an app using express

   3. create port number  (3000)

   4. create requests according to our project


   nodemon Server
   ---------------

     - npm i -g nodemon

     - nodemon index.js - to run nodemon server

     User Authentication Using express
     -----------------------------------

     JWT(json web token) token
     --------------------------

     npm i jsonwebtoken - command used to install JWT token
     jsonwebtoken   - library
     sign()         - method used to generate token
     verify()       - method to verify token


     Middlewares
     -------------

     - middlewares have the capacity to control server request
     - its a function with three arguments  (request,response,next)

     - There are two types of middleware
       
                 1. Application Specific Middlewares - used when all the functions or methods require middleware

                 2. Router Specific Middlewares - used when some of the functions or methods require middleware



Solving Run-time errors in JS
------------------------------

try catch

try{
  error causing code
}

catch{
     solution
}


Mongo DB
---------

-mongodb server
- shell commands in mongodb

     - to see the database

        -> show dbs
        
        - to open particular database

           -> use database_name

    - to view collections inside database
       
         -> show collections

    - to view datas inside collections

        -> db.collection_name.find()

    - to view any single data inside collections

        ->db.collection_name.findOne({unique data to identify})

    - to insert new data

       -> db.collection_name.insertOne({data})

    - to view any  data according to  a condition

       -> db.collection_name.findOne({condition})  - single data
       -> db.collection_name.find({condition})     - all datas

    - delete

       - to delete single data

          -> db.collection_name.deleteOne({data})

          - delete count=number
          - delete count=0      if nothing is deleted

    - update

       -> db.collection_name.updateOne({data to be updated},{new data})

  crud  - create read update delete


